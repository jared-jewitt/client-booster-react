name: Continuous Deployment

on:
  push:
    branches:
      - development
      - staging
      - master

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login
        run: echo "${{ secrets.SERVICE_ACCOUNT_KEY }}" | base64 --decode | docker login -u _json_key --password-stdin gcr.io

      - name: Build, tag, and push image for development
        if: ${{ github.ref == 'refs/heads/development' }}
        run: |
          docker build --target=cd --tag=client:cd .
          docker tag client:cd gcr.io/"${{ secrets.PROJECT_ID }}"/client:development
          docker push gcr.io/"${{ secrets.PROJECT_ID }}"/client:development

      - name: Pull, re-tag, and push image for staging
        if: ${{ github.ref == 'refs/heads/staging' }}
        run: |
          docker pull gcr.io/"${{ secrets.PROJECT_ID }}"/client:development
          docker tag gcr.io/"${{ secrets.PROJECT_ID }}"/client:development gcr.io/"${{ secrets.PROJECT_ID }}"/client:staging
          docker push gcr.io/"${{ secrets.PROJECT_ID }}"/client:staging

      - name: Pull, re-tag, and push image for master
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          docker pull gcr.io/"${{ secrets.PROJECT_ID }}"/client:staging
          docker tag gcr.io/"${{ secrets.PROJECT_ID }}"/client:staging gcr.io/"${{ secrets.PROJECT_ID }}"/client:master
          docker push gcr.io/"${{ secrets.PROJECT_ID }}"/client:master

  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    needs: [docker]
    env:
      TERRAFORM_CLOUD_API_TOKEN: ${{ secrets.TERRAFORM_CLOUD_API_TOKEN }}
      TERRAFORM_CLOUD_ORGANIZATION: ${{ secrets.TERRAFORM_CLOUD_ORGANIZATION }}
      TF_WORKSPACE: $(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')
      TF_IN_AUTOMATION: true
    defaults:
      run:
        working-directory: infrastructure
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.0
          cli_config_credentials_hostname: app.terraform.io
          cli_config_credentials_token: TERRAFORM_CLOUD_API_TOKEN

      - name: Init
        run: terraform init -backend-config="organization="${TERRAFORM_CLOUD_ORGANIZATION}""

      - name: Apply
        run: terraform apply -auto-approve
